pipeline {
    agent any

    parameters {
        booleanParam(name: 'RUN_SONAR', defaultValue: true, description: '✅ Bật Sonar + Jacoco phân tích mã nguồn?')
    }

    environment {
        IMAGE_TAG = 'latest'
        DOCKER_HUB_USER = 'karobest10'
        SERVICE_NAME = 'account-service'
    }

    tools {
        maven 'maven_3.9'
        jdk 'JDK 17'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/kiennt94/microservice'
            }
        }

        stage('SonarQube Analysis') {
            when {
                expression { params.RUN_SONAR }
            }
            steps {
                withSonarQubeEnv('SonarQube') {
                    withCredentials([string(credentialsId: 'sonarqube-token', variable: 'SONAR_TOKEN')]) {
                        sh '''#!/bin/bash
                            mvn clean verify \
                                -pl ${SERVICE_NAME} -am \
                                -DskipTests=false \
                                -Dsonar.projectKey=${SERVICE_NAME} \
                                -Dsonar.projectName=${SERVICE_NAME} \
                                -Dsonar.host.url=http://sonarqube:9000 \
                                -Dsonar.token=$SONAR_TOKEN \
                                sonar:sonar
                        '''
                    }
                }
            }
        }

        stage('Build Maven Module') {
            steps {
                sh "mvn clean install -pl ${SERVICE_NAME} -am -DskipTests"
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${SERVICE_NAME}/docker") {
                    sh """
                        docker build -t ${DOCKER_HUB_USER}/${SERVICE_NAME}:${IMAGE_TAG} .
                    """
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                sh """
                    docker rm -f ${SERVICE_NAME} || true
                    docker run -d --name ${SERVICE_NAME} -p 8080:8080 ${DOCKER_HUB_USER}/${SERVICE_NAME}:${IMAGE_TAG}
                """
            }
        }
    }

    post {
        success {
            echo "✅ Build + Deploy thành công: ${SERVICE_NAME}"
        }
        failure {
            echo "❌ Có lỗi xảy ra khi build hoặc deploy: ${SERVICE_NAME}"
        }
    }
}
