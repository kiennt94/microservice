networks:
  app-network:
    name: app-network
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: "app-network"

services:

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin-product
    ports:
      - "9411:9411"
    networks:
      - app-network

  redis-product:
    image: redis:7.2
    container_name: redis-product
    ports:
      - "6379:6379"
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak-product
    command: [ "start-dev" ]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_URL=jdbc:mysql://192.168.1.99:3306/keycloak_testingsystem
      - KC_DB_USERNAME=keycloak_user
      - KC_DB_PASSWORD=091094
      - KC_HOSTNAME=192.168.1.99
    ports:
      - "8000:8080"
    networks:
      - app-network

  config-server:
    build:
      context: .
      dockerfile: ./config-server/docker/Dockerfile
    image: config-server
    container_name: config-server
    volumes:
      - /d/microservice/spring-config-repo:/config-repo
      - /d/microservice/spring-config-repo/eureka-server:/config-repo/eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - CONFIG_REPO_LOCATION=file:/config-repo,file:/config-repo/eureka-server
    ports:
      - "8888:8888"
    networks:
      - app-network

  eureka-server:
    build:
      context: .
      dockerfile: ./eureka-server/docker/Dockerfile
    image: eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    networks:
      - app-network
    entrypoint: ["sh", "-c", "until curl -s http://config-server:8888/actuator/health; do echo 'Waiting for Config Server...'; sleep 5; done; java -jar /app.jar"]

  api-gateway:
    build:
      context: .
      dockerfile: ./gateway-service/docker/Dockerfile
    image: api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - zipkin
    networks:
      - app-network
    entrypoint: ["sh", "-c", "until curl -s http://eureka-server:8761/actuator/health; do echo 'Waiting for Eureka...'; sleep 5; done; java -jar /app.jar"]

  account-service:
    build:
      context: .
      dockerfile: ./account-service/docker/Dockerfile
    image: account-service
    container_name: account-service
    depends_on:
      - api-gateway
    networks:
      - app-network
    entrypoint: ["sh", "-c", "until curl -s http://api-gateway:8080/actuator/health; do echo 'Waiting for Api Gateway...'; sleep 5; done; java -jar /app.jar"]

  position-service:
    build:
      context: .
      dockerfile: ./position-service/docker/Dockerfile
    image: position-service
    container_name: position-service
    depends_on:
      - api-gateway
    networks:
      - app-network
    entrypoint: ["sh", "-c", "until curl -s http://api-gateway:8080/actuator/health; do echo 'Waiting for API Gateway...'; sleep 5; done; java -jar /app.jar"]

  department-service:
    build:
      context: .
      dockerfile: ./department-service/docker/Dockerfile
    image: department-service
    container_name: department-service
    depends_on:
      - api-gateway
    networks:
      - app-network
    entrypoint: ["sh", "-c", "until curl -s http://api-gateway:8080/actuator/health; do echo 'Waiting for API Gateway...'; sleep 5; done; java -jar /app.jar"]

  jenkins:
    image: karobest10/jenkins-dark:latest
    container_name: jenkins
    ports:
      - "8001:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

volumes:
  jenkins_home:
    external: true